# Generated by Django 3.2.12 on 2022-03-23 19:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(max_length=255, null=True)),
                ('lineage', models.CharField(max_length=256, null=True)),
                ('v1v3', models.IntegerField(default=0, help_text='Core Microbe', verbose_name='v1v3')),
                ('v4', models.IntegerField(default=0, help_text='Core Microbe', verbose_name='v4')),
                ('oxy', models.CharField(choices=[('a', 'Aero/Resp'), ('f', 'Fac. An.'), ('o', 'Obl. An.'), ('u', 'n.d.')], default='u', help_text='Aerobic/Anaerobic', max_length=1, verbose_name='OXY')),
                ('aob', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Ammonia Oxidizer', max_length=1, verbose_name='AOB')),
                ('nob', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Nitrite Oxidizer', max_length=1, verbose_name='NOB')),
                ('nrb', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Nitrate Reducer', max_length=1, verbose_name='NRB')),
                ('sob', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Sulfur Oxidizer', max_length=1, verbose_name='SOB')),
                ('srb', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Sulfur Reducer', max_length=1, verbose_name='SRB')),
                ('pao', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Polyphosphate Accumulator', max_length=1, verbose_name='PAO')),
                ('gao', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Glycogen Accumulator', max_length=1, verbose_name='GAO')),
                ('eps', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Extracellular Polysaccharide/Bulking', max_length=1, verbose_name='EPS')),
                ('foa', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Foaming/Hydrophobic', max_length=1, verbose_name='FOA')),
                ('fil', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Filament', max_length=1, verbose_name='FIL')),
                ('c1s', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Methylotroph', max_length=1, verbose_name='C1S')),
                ('ch4', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Methanogen', max_length=1, verbose_name='CH4')),
                ('ace', models.CharField(choices=[('y', 'yes'), ('n', 'no'), ('v', 'var'), ('u', 'n.d.')], default='u', help_text='Acetogen', max_length=1, verbose_name='ACE')),
                ('comments', markdownx.models.MarkdownxField(blank=True)),
                ('references', markdownx.models.MarkdownxField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=100, verbose_name='Client')),
            ],
            options={
                'ordering': ['client'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bugbase.client')),
            ],
            options={
                'ordering': ['first_name'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(max_length=100, verbose_name='Site')),
            ],
            options={
                'ordering': ['site'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_sampled', models.DateField(blank=True, default=django.utils.timezone.now, help_text='Date sample was collected', null=True, verbose_name='Date Sampled')),
                ('date_submitted', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Date Submitted')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Site Notes')),
                ('mca_bact', models.BooleanField(blank=True, default=False, null=True, verbose_name='Bac')),
                ('mca_arch', models.BooleanField(blank=True, default=False, null=True, verbose_name='Arc')),
                ('qpcr', models.BooleanField(blank=True, default=False, null=True, verbose_name='qPCR')),
                ('qpcr_tests', models.CharField(blank=True, max_length=60, null=True, verbose_name='qPCR Tests')),
                ('barcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='Barcode')),
                ('seqrun', models.IntegerField(blank=True, null=True)),
                ('gdna', models.FloatField(blank=True, default=0.0, null=True, verbose_name='gDNA')),
                ('completed', models.BooleanField(blank=True, default=False, null=True)),
                ('invoiced', models.BooleanField(blank=True, default=False, null=True)),
                ('invoice_no', models.IntegerField(blank=True, null=True)),
                ('comments', markdownx.models.MarkdownxField(blank=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bugbase.client')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bugbase.contact')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bugbase.site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
